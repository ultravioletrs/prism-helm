# Copyright (c) Ultraviolet
# SPDX-License-Identifier: Apache-2.0

{{- define "providers.cloud.init.yml" -}}

package_update: true
package_upgrade: false

users:
  - default
  - name: cocos_user
    gecos: Default User
    groups:
      - sudo
      - docker
    sudo:
      - ALL=(ALL:ALL) ALL
    shell: /sbin/nologin

packages:
  - curl
  - make
  - git
  - python3
  - python3-dev
  - python3-venv
  - python3-pip
  - net-tools

write_files:
  - path: /etc/cocos/certs/cert.pem
    content: |
{{`{{ .Cert | indent 6 }}`}}
    permissions: "0644"

  - path: /etc/cocos/certs/ca.pem
    content: |
{{`{{ .CA | indent 6 }}`}}
    permissions: "0644"

  - path: /etc/cocos/certs/key.pem
    content: |
{{`{{ .Key | indent 6 }}`}}
    permissions: "0600"

  - path: /etc/cocos/environment
    content: |
      {{`{{- range $key, $value := .EnvironmentVariables }}`}}
      {{`{{ $key }}={{ $value }}`}}
      {{`{{- end }}`}}
    permissions: "0644"

  - path: /etc/systemd/system/cocos-agent.service
    content: |
      [Unit]
      Description=Cocos AI agent
      After=network.target
      Before=docker.service

      [Service]
      WorkingDirectory=/cocos
      StandardOutput=file:/var/log/cocos/agent.stdout
      StandardError=file:/var/log/cocos/agent.stderr
      EnvironmentFile=/etc/cocos/environment
      ExecStartPre=/cocos_init/agent_setup.sh
      ExecStart=/cocos_init/agent_start_script.sh
      Restart=always

      [Install]
      WantedBy=default.target
    permissions: "0644"

  - path: /cocos_init/agent_setup.sh
    content: |
      #!/bin/sh

      WORK_DIR="/cocos"

      IFACES=$(ip link show | grep -vE 'LOOPBACK|sit*' | awk -F': ' '{print $2}')

      for IFACE in $IFACES; do
          STATE=$(ip link show $IFACE | grep DOWN)
          if [ -n "$STATE" ]; then
              ip link set $IFACE up
          fi

          IP_ADDR=$(ip addr show $IFACE | grep 'inet ')
          if [ -z "$IP_ADDR" ]; then
              dhclient $IFACE
          fi
      done

      if [ ! -d "$WORK_DIR" ]; then
          mkdir -p $WORK_DIR
      fi

      ROOT_DEV=$(findmnt / -o SOURCE -n)
      resize2fs "$ROOT_DEV" && echo "Root filesystem resized successfully" || echo "Failed to resize root filesystem"
    permissions: "0755"

  - path: /cocos_init/agent_start_script.sh
    content: |
      #!/bin/sh

      mkdir -p /etc/systemd/system/docker.service.d

      tee /etc/systemd/system/docker.service.d/override.conf > /dev/null <<EOF
      [Service]
      Environment=DOCKER_RAMDISK=true
      EOF

      systemctl daemon-reload

      NUM_OF_PERMITED_IFACE=1

      NUM_OF_IFACE=$(ip route | grep -Eo 'dev [a-z0-9]+' | awk '{ print $2 }' | grep -v '^docker' | sort | uniq | wc -l)

      if [ $NUM_OF_IFACE -gt $NUM_OF_PERMITED_IFACE ]; then
          echo "More than one network interface in the VM"
          exit 1
      fi

      DEFAULT_IFACE=$(route | grep '^default' | grep -o '[^ ]*$')
      AGENT_GRPC_HOST=$(ip -4 addr show $DEFAULT_IFACE | grep inet | awk '{print $2}' | cut -d/ -f1)

      export AGENT_GRPC_HOST

      exec /bin/cocos-agent
    permissions: "0755"

runcmd:
  - mkdir -p /cocos
  - mkdir -p /cocos_init
  - mkdir -p /var/log/cocos
  - mkdir -p /etc/cocos
  - echo "[ COCOS AGENT SETUP ] Downloading the cocos-agent binary..."
  - curl -L -O -J https://github.com/ultravioletrs/cocos/releases/download/v0.5.1/cocos-agent --progress-bar && echo "[ COCOS AGENT SETUP ] cocos-agent binary downloaded successfully" || echo "Failed to download cocos-agent binary"
  - echo "[ COCOS AGENT SETUP ] Installing cocos-agent binary..."
  - install -D -m 0755 cocos-agent /bin/cocos-agent && echo "[ COCOS AGENT SETUP ] cocos-agent binary installed successfully" || echo "[ COCOS AGENT SETUP ] Failed to install cocos-agent binary"
  - echo "Installing Wasmtime runtime..."
  - curl https://wasmtime.dev/install.sh -sSf | bash && echo "Wasmtime installed successfully" || echo "Failed to install Wasmtime"
  - echo "Configuring Wasmtime environment variables..."
  - echo "export WASMTIME_HOME=$HOME/.wasmtime" >> /etc/profile.d/wasm_env.sh
  - echo "export PATH=\$WASMTIME_HOME/bin:\$PATH" >> /etc/profile.d/wasm_env.sh
  - . /etc/profile.d/wasm_env.sh && echo "Wasmtime environment variables configured successfully" || echo "Failed to configure Wasmtime environment variables"
  - echo "Starting Docker installation..."
  - curl -fsSL https://get.docker.com -o get-docker.sh && echo "Docker install script downloaded successfully" || echo "Failed to download Docker install script"
  - sh ./get-docker.sh && echo "Docker installed successfully" || echo "Failed to install Docker"
  - usermod -aG docker cocos_user && echo "Added cocos_user to the docker group" || echo "Failed to add cocos_user to the docker group"
  - echo "Disabling SSH service..."
  - systemctl disable ssh.service && echo "SSH service disabled successfully" || echo "Failed to disable SSH service"
  - systemctl disable sshd.service && echo "SSHD service disabled successfully" || echo "Failed to disable SSHD service"
  - systemctl stop ssh.service && echo "SSH service stopped successfully" || echo "Failed to stop SSH service"
  - systemctl stop sshd.service && echo "SSHD service stopped successfully" || echo "Failed to stop SSHD service"
  - echo "[ COCOS AGENT SETUP ] Reloading systemd daemon..."
  - systemctl daemon-reload && echo "[ COCOS AGENT SETUP ] Systemd daemon reloaded successfully" || echo "[ COCOS AGENT SETUP ] Failed to reload systemd daemon"
  - echo "[ COCOS AGENT SETUP ] Enabling cocos-agent.service..."
  - systemctl enable cocos-agent.service && echo "[ COCOS AGENT SETUP ] cocos-agent.service enabled successfully" || echo "[ COCOS AGENT SETUP ] Failed to enable cocos-agent.service"
  - echo "[ COCOS AGENT SETUP ] Starting cocos-agent.service..."
  - systemctl start cocos-agent.service && echo "[ COCOS AGENT SETUP ] cocos-agent.service started successfully" || echo "[ COCOS AGENT SETUP ] Failed to start cocos-agent.service"

final_message: "Cocos agent setup complete. Verify logs to confirm successful service startup."


{{- end -}}
