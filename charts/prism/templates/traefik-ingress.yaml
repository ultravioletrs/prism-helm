# Copyright (c) Ultraviolet
# SPDX-License-Identifier: Apache-2.0

apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: ingress-route
  namespace: {{ .Release.Namespace }}
spec:
  entryPoints:
    - web
    - websecure
  routes:
    # Specific service routes with higher priority
    {{- if .Values.argocd.enabled }}
    - kind: Rule
      match: >-
        {{- if .Values.env.prod }}
        Host(`prism.ultraviolet.rs`) && PathPrefix(`/argocd`)
        {{- else }}
        Host(`staging.prism.ultraviolet.rs`) && PathPrefix(`/argocd`)
        {{- end }}
      priority: 100
      services:
        - name: argocd-server
          namespace: argocd
          port: 80
          scheme: http
    {{- end }}

    {{- if .Values.argoRollouts.enabled }}
    - kind: Rule
      match: >-
        {{- if .Values.env.prod }}
        Host(`prism.ultraviolet.rs`) && PathPrefix(`/rollouts`)
        {{- else }}
        Host(`staging.prism.ultraviolet.rs`) && PathPrefix(`/rollouts`)
        {{- end }}
      priority: 90
      services:
        - name: argo-rollouts-dashboard
          namespace: {{ .Release.Namespace }}
          port: 3100
    {{- end }}

    {{- if .Values.opensearch.enabled }}
    - kind: Rule
      match: >-
        {{- if .Values.env.prod }}
        Host(`prism.ultraviolet.rs`) && PathPrefix(`/opensearch`)
        {{- else }}
        Host(`staging.prism.ultraviolet.rs`) && PathPrefix(`/opensearch`)
        {{- end }}
      priority: 80
      services:
        - name: prism-opensearch-dashboards
          namespace: {{ .Release.Namespace }}
          port: 5601
          kind: Service
    {{- end }}

    {{- if .Values.prometheus.enabled }}
    - kind: Rule
      match: >-
        {{- if .Values.env.prod }}
        Host(`prism.ultraviolet.rs`) && PathPrefix(`/grafana`)
        {{- else }}
        Host(`staging.prism.ultraviolet.rs`) && PathPrefix(`/grafana`)
        {{- end }}
      priority: 70
      middlewares:
        - name: {{ .Release.Name }}-grafana-strip-prefix
          namespace: {{ .Release.Namespace }}
      services:
        - name: prism-staging-grafana
          namespace: {{ .Release.Namespace }}
          port: 80
          kind: Service

    - kind: Rule
      match: >-
        {{- if .Values.env.prod }}
        Host(`prism.ultraviolet.rs`) && PathPrefix(`/prometheus`)
        {{- else }}
        Host(`staging.prism.ultraviolet.rs`) && PathPrefix(`/prometheus`)
        {{- end }}
      priority: 60
      middlewares:
        - name: {{ .Release.Name }}-prometheus-strip-prefix
          namespace: {{ .Release.Namespace }}
      services:
        - name: prism-monitoring-stack-prometheus
          namespace: {{ .Release.Namespace }}
          port: 9090
          kind: Service
    {{- end }}

    - kind: Rule
      match: >-
        {{- if .Values.env.prod }}
        Host(`prism.ultraviolet.rs`) && PathPrefix(`/ui`)
        {{- else }}
        Host(`staging.prism.ultraviolet.rs`) && PathPrefix(`/ui`)
        {{- end }}
      priority: 110
      middlewares:
        - name: {{ .Release.Name }}-middleware
          namespace: {{ .Release.Namespace }}
      services:
        - name: {{ .Release.Name }}-ui
          namespace: {{ .Release.Namespace }}
          port: 9095

    # Default route - catches all other paths and root path for UI service
    - kind: Rule
      match: >-
        {{- if .Values.env.prod }}
        Host(`prism.ultraviolet.rs`)
        {{- else }}
        Host(`staging.prism.ultraviolet.rs`)
        {{- end }}
      priority: 10
      middlewares:
        - name: {{ .Release.Name }}-middleware
          namespace: {{ .Release.Namespace }}
      services:
        - name: {{ .Release.Name }}-ui
          namespace: {{ .Release.Namespace }}
          port: 9095
  tls:
    certResolver: letsEncrypt

{{- if .Values.traefik.dashboard.enabled }}
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: {{ .Release.Name }}-traefik-dashboard
  namespace: {{ .Release.Namespace }}
spec:
  entryPoints:
    - traefik
  routes:
    - match: PathPrefix(`/dashboard`) || PathPrefix(`/api`)
      kind: Rule
      services:
        - name: api@internal
          kind: TraefikService
{{- end }}

# Middlewares

{{- if .Values.opensearch.enabled }}
---
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: {{ .Release.Name }}-opensearch-strip-prefix
  namespace: {{ .Release.Namespace }}
spec:
  stripPrefix:
    prefixes:
      - /opensearch
    forceSlash: true
{{- end }}

{{- if .Values.prometheus.enabled }}
---
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: {{ .Release.Name }}-grafana-strip-prefix
  namespace: {{ .Release.Namespace }}
spec:
  stripPrefix:
    prefixes:
      - /grafana
    forceSlash: true

---
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: {{ .Release.Name }}-prometheus-strip-prefix
  namespace: {{ .Release.Namespace }}
spec:
  stripPrefix:
    prefixes:
      - /prometheus
    forceSlash: true
{{- end }}
