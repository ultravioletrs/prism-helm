# Copyright (c) Ultraviolet
# SPDX-License-Identifier: Apache-2.0

apiVersion: traefik.io/v1alpha1
kind: ServersTransport
metadata:
  name: {{.Release.Name}}-k8s-dashboard-transport
  namespace: {{ .Release.Namespace}}
spec:
  insecureSkipVerify: true
---

apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: ingress-route
  namespace: {{ .Release.Namespace }}
spec:
  entryPoints:
    - web
    - websecure
  routes:
    - match: {{- if .Values.env.prod }} Host(`prism.ultraviolet.rs`) {{ else }} Host(`staging.prism.ultraviolet.rs`) {{- end }}
      kind: Rule
      middlewares:
        - name: {{ .Release.Name }}-middleware
          namespace: {{ .Release.Namespace }}
      services:
        - name: {{ .Release.Name }}-ui
          namespace: {{ .Release.Namespace }}
          port: 9095
  tls:
    certResolver: letsEncrypt
---
apiVersion: traefik.io/v1alpha1
kind: IngressRouteTCP
metadata:
  name: ingress-route-backends-tcp
  namespace: {{ .Release.Namespace }}
spec:
  entryPoints:
    - tcp
  routes:
    - match: {{ if .Values.env.prod }} Host(`prism.ultraviolet.rs`) {{ else }} Host(`staging.prism.ultraviolet.rs`) {{ end }} && PathPrefix(`/backends`)
      middlewares:
        - name: {{ .Release.Name }}-middleware
          namespace: {{ .Release.Namespace }}
      services:
        - name: "{{ .Release.Name }}-backends"
          namespace: {{ .Release.Namespace }}
          port: 7011
  tls:
    passthrough: true
    options:
      name: tcp-tls-option
      namespace: {{ .Release.Namespace }}


{{- if .Values.traefik.dashboard.enabled }}
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: {{ .Release.Name }}-traefik-dashboard
  namespace: {{ .Release.Namespace }}
spec:
  entryPoints:
    - traefik
  routes:
    - match: PathPrefix(`/dashboard`) || PathPrefix(`/api`)
      kind: Rule
      services:
        - name: api@internal
          kind: TraefikService

{{- end }}


{{- if .Values.k8sdashboard.enabled }}
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: {{ .Release.Name }}-k8s-dashboard
  namespace: {{ .Release.Namespace }}
spec:
  entryPoints:
    - k8s
  routes:
    - match: PathPrefix(`/`)
      kind: Rule
      services:
        - name: {{ .Release.Name }}-kong-proxy
          namespace: {{ .Release.Namespace }}
          port: 443
          kind: Service
          serversTransport: {{.Release.Name}}-k8s-dashboard-transport
  tls:
    certResolver: letsEncrypt

{{- end }}

{{- if .Values.prometheus.enabled }}
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: {{ .Release.Name }}-prometheus-grafana
  namespace: {{ .Release.Namespace }}
spec:
  entryPoints:
    - grafana
  routes:
    - match: PathPrefix(`/`)
      kind: Rule
      services:
        - name: prism-staging-grafana
          namespace: {{ .Release.Namespace }}
          port: 80
          kind: Service
  tls:
    certResolver: letsEncrypt

---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: {{ .Release.Name }}-prometheus
  namespace: {{ .Release.Namespace }}
spec:
  entryPoints:
    - prometheus
  routes:
    - match: PathPrefix(`/`)
      kind: Rule
      services:
        - name: prism-monitoring-stack-prometheus
          namespace: {{ .Release.Namespace }}
          port: 9090
          kind: Service
  tls:
    certResolver: letsEncrypt

{{- end }}

{{- if not .Values.env.prod }}
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: {{ .Release.Name }}-argo-ui
  namespace: {{ .Release.Namespace }}
spec:
  entryPoints:
    - argoui
  routes:
    - match: PathPrefix(`/`)
      kind: Rule
      priority: 10
      services:
        - name: argocd-server
          namespace: argocd
          port: 443
          kind: Service
    - match: PathPrefix(`/grpc`) && Header(`Content-Type`, `application/grpc`)
      kind: Rule
      priority: 11
      services:
        - kind: Service
          name: argocd-server
          namespace: argocd
          port: http
          scheme: h2c
  tls:
    certResolver: letsEncrypt
{{- end }}


{{- if .Values.argoRollouts.enabled }}
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: {{ .Release.Name }}-argo-rollouts-dashboard
  namespace: {{ .Release.Namespace }}
spec:
  entryPoints:
    - rollouts
  routes:
    - match: PathPrefix(`/`)
      kind: Rule
      priority: 10
      services:
        - name: argo-rollouts-dashboard
          namespace: {{ .Release.Namespace }}
          port: 3100
          kind: Service


{{- end }}