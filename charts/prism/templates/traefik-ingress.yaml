# Copyright (c) Ultraviolet
# SPDX-License-Identifier: Apache-2.0

apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: ingress-route
  namespace: {{ .Release.Namespace }}
spec:
  entryPoints:
    - web
    - websecure
  routes:
    {{- if .Values.argocd.enabled }}
    - kind: Rule
      match: >-
        {{- if .Values.env.prod }}
        Host(`prism.ultraviolet.rs`) && PathPrefix(`/argocd`)
        {{- else }}
        Host(`staging.prism.ultraviolet.rs`) && PathPrefix(`/argocd`)
        {{- end }}
      priority: 120
      services:
        - name: argocd-server
          namespace: argocd
          port: 80
          scheme: http
    {{- end }}

    - kind: Rule
      match: >-
        {{- if .Values.env.prod }}
        Host(`prism.ultraviolet.rs`) && PathPrefix(`/ui`)
        {{- else }}
        Host(`staging.prism.ultraviolet.rs`) && PathPrefix(`/ui`)
        {{- end }}
      priority: 115
      middlewares:
        - name: {{ .Release.Name }}-middleware
          namespace: {{ .Release.Namespace }}
        - name: {{ .Release.Name }}-headers-middleware
          namespace: {{ .Release.Namespace }}
        - name: {{ .Release.Name }}-retry-middleware
          namespace: {{ .Release.Namespace }}
      services:
        - name: {{ .Release.Name }}-ui
          namespace: {{ .Release.Namespace }}
          port: 9095

    - kind: Rule
      match: >-
        {{- if .Values.env.prod }}
        Host(`prism.ultraviolet.rs`) && PathPrefix(`/billing`)
        {{- else }}
        Host(`staging.prism.ultraviolet.rs`) && PathPrefix(`/billing`)
        {{- end }}
      priority: 110
      middlewares:
        - name: {{ .Release.Name }}-billing-strip-prefix
          namespace: {{ .Release.Namespace }}
        - name: {{ .Release.Name }}-headers-middleware
          namespace: {{ .Release.Namespace }}
        - name: {{ .Release.Name }}-retry-middleware
          namespace: {{ .Release.Namespace }}
      services:
        - name: {{ .Release.Name }}-billing
          namespace: {{ .Release.Namespace }}
          port: 9022
          scheme: "{{ if .Values.env.prod }}https{{ else }}http{{ end }}"
          {{- if .Values.env.prod }}
          serversTransport: {{ .Release.Name }}-https-transport
          {{- end }}

    - kind: Rule
      match: >-
        {{- if .Values.env.prod }}
        Host(`prism.ultraviolet.rs`) && PathPrefix(`/computations`)
        {{- else }}
        Host(`staging.prism.ultraviolet.rs`) && PathPrefix(`/computations`)
        {{- end }}
      priority: 105
      middlewares:
        - name: {{ .Release.Name }}-headers-middleware
          namespace: {{ .Release.Namespace }}
        - name: {{ .Release.Name }}-retry-middleware
          namespace: {{ .Release.Namespace }}
      services:
        - name: {{ .Release.Name }}-computations
          namespace: {{ .Release.Namespace }}
          port: 9000
          scheme: "{{ if .Values.env.prod }}https{{ else }}http{{ end }}"
          {{- if .Values.env.prod }}
          serversTransport: {{ .Release.Name }}-https-transport
          {{- end }}

    - kind: Rule
      match: >-
        {{- if .Values.env.prod }}
        Host(`prism.ultraviolet.rs`) && (PathPrefix(`/users`) || PathPrefix(`/password`) || PathPrefix(`/oauth`))
        {{- else }}
        Host(`staging.prism.ultraviolet.rs`) && (PathPrefix(`/users`) || PathPrefix(`/password`)|| PathPrefix(`/oauth`))
        {{- end }}
      priority: 104
      middlewares:
        - name: {{ .Release.Name }}-headers-middleware
          namespace: {{ .Release.Namespace }}
        - name: {{ .Release.Name }}-retry-middleware
          namespace: {{ .Release.Namespace }}
      services:
        - name: {{ .Release.Name }}-users
          namespace: {{ .Release.Namespace }}
          port: 9003
          scheme: "{{ if .Values.env.prod }}https{{ else }}http{{ end }}"
          {{- if .Values.env.prod }}
          serversTransport: {{ .Release.Name }}-https-transport
          {{- end }}

    - kind: Rule
      match: >-
        {{- if .Values.env.prod }}
        Host(`prism.ultraviolet.rs`) && PathPrefix(`/policies`)
        {{- else }}
        Host(`staging.prism.ultraviolet.rs`) && PathPrefix(`/policies`)
        {{- end }}
      priority: 103
      middlewares:
        - name: {{ .Release.Name }}-headers-middleware
          namespace: {{ .Release.Namespace }}
        - name: {{ .Release.Name }}-retry-middleware
          namespace: {{ .Release.Namespace }}
      services:
        - name: {{ .Release.Name }}-users
          namespace: {{ .Release.Namespace }}
          port: 9003
          scheme: "{{ if .Values.env.prod }}https{{ else }}http{{ end }}"
          {{- if .Values.env.prod }}
          serversTransport: {{ .Release.Name }}-https-transport
          {{- end }}

    - kind: Rule
      match: >-
        {{- if .Values.env.prod }}
        Host(`prism.ultraviolet.rs`) && PathPrefix(`/auth`)
        {{- else }}
        Host(`staging.prism.ultraviolet.rs`) && PathPrefix(`/auth`)
        {{- end }}
      priority: 102
      middlewares:
        - name: {{ .Release.Name }}-auth-strip-prefix
          namespace: {{ .Release.Namespace }}
        - name: {{ .Release.Name }}-headers-middleware
          namespace: {{ .Release.Namespace }}
        - name: {{ .Release.Name }}-retry-middleware
          namespace: {{ .Release.Namespace }}
      services:
        - name: {{ .Release.Name }}-auth
          namespace: {{ .Release.Namespace }}
          port: 8189
          scheme: "{{ if .Values.env.prod }}https{{ else }}http{{ end }}"
          {{- if .Values.env.prod }}
          serversTransport: {{ .Release.Name }}-https-transport
          {{- end }}

    - kind: Rule
      match: >-
        {{- if .Values.env.prod }}
        Host(`prism.ultraviolet.rs`) && PathPrefix(`/workspaces`)
        {{- else }}
        Host(`staging.prism.ultraviolet.rs`) && PathPrefix(`/workspaces`)
        {{- end }}
      priority: 101
      middlewares:
        - name: {{ .Release.Name }}-workspaces-strip-prefix
          namespace: {{ .Release.Namespace }}
        - name: {{ .Release.Name }}-headers-middleware
          namespace: {{ .Release.Namespace }}
        - name: {{ .Release.Name }}-retry-middleware
          namespace: {{ .Release.Namespace }}
      services:
        - name: {{ .Release.Name }}-domains
          namespace: {{ .Release.Namespace }}
          port: 9013
          scheme: "{{ if .Values.env.prod }}https{{ else }}http{{ end }}"
          {{- if .Values.env.prod }}
          serversTransport: {{ .Release.Name }}-https-transport
          {{- end }}

    - kind: Rule
      match: >-
        {{- if .Values.env.prod }}
        Host(`prism.ultraviolet.rs`) && PathPrefix(`/backends`)
        {{- else }}
        Host(`staging.prism.ultraviolet.rs`) && PathPrefix(`/backends`)
        {{- end }}
      priority: 100
      middlewares:
        - name: {{ .Release.Name }}-headers-middleware
          namespace: {{ .Release.Namespace }}
        - name: {{ .Release.Name }}-retry-middleware
          namespace: {{ .Release.Namespace }}
      services:
        - name: {{ .Release.Name }}-backends
          namespace: {{ .Release.Namespace }}
          port: 9011
          scheme: "{{ if .Values.env.prod }}https{{ else }}http{{ end }}"
          {{- if .Values.env.prod }}
          serversTransport: {{ .Release.Name }}-https-transport
          {{- end }}


    - kind: Rule
      match: >-
        {{- if .Values.env.prod }}
        Host(`prism.ultraviolet.rs`) && PathPrefix(`/certs`)
        {{- else }}
        Host(`staging.prism.ultraviolet.rs`) && PathPrefix(`/certs`)
        {{- end }}
      priority: 99
      middlewares:
        - name: {{ .Release.Name }}-headers-middleware
          namespace: {{ .Release.Namespace }}
        - name: {{ .Release.Name }}-retry-middleware
          namespace: {{ .Release.Namespace }}
      services:
        - name: {{ .Release.Name }}-certs
          namespace: {{ .Release.Namespace }}
          port: 8090
          scheme: "{{ if .Values.env.prod }}https{{ else }}http{{ end }}"
          {{- if .Values.env.prod }}
          serversTransport: {{ .Release.Name }}-https-transport
          {{- end }}

    - kind: Rule
      match: >-
        {{- if .Values.env.prod }}
        Host(`prism.ultraviolet.rs`) && PathPrefix(`/am-certs`)
        {{- else }}
        Host(`staging.prism.ultraviolet.rs`) && PathPrefix(`/am-certs`)
        {{- end }}
      priority: 98
      middlewares:
        - name: {{ .Release.Name }}-headers-middleware
          namespace: {{ .Release.Namespace }}
        - name: {{ .Release.Name }}-retry-middleware
          namespace: {{ .Release.Namespace }}
      services:
        - name: {{ .Release.Name }}-am-certs
          namespace: {{ .Release.Namespace }}
          port: 9010
          scheme: "{{ if .Values.env.prod }}https{{ else }}http{{ end }}"
          {{- if .Values.env.prod }}
          serversTransport: {{ .Release.Name }}-https-transport
          {{- end }}

    - kind: Rule
      match: >-
        {{- if .Values.env.prod }}
        Host(`prism.ultraviolet.rs`) && PathPrefix(`/computations/health`)
        {{- else }}
        Host(`staging.prism.ultraviolet.rs`) && PathPrefix(`/computations/health`)
        {{- end }}
      priority: 97
      middlewares:
        - name: {{ .Release.Name }}-headers-middleware
          namespace: {{ .Release.Namespace }}
        - name: {{ .Release.Name }}-retry-middleware
          namespace: {{ .Release.Namespace }}
      services:
        - name: {{ .Release.Name }}-computations
          namespace: {{ .Release.Namespace }}
          port: 9000
          scheme: "{{ if .Values.env.prod }}https{{ else }}http{{ end }}"
          {{- if .Values.env.prod }}
          serversTransport: {{ .Release.Name }}-https-transport
          {{- end }}

    - kind: Rule
      match: >-
        {{- if .Values.env.prod }}
        Host(`prism.ultraviolet.rs`) && PathPrefix(`/users/health`)
        {{- else }}
        Host(`staging.prism.ultraviolet.rs`) && PathPrefix(`/users/health`)
        {{- end }}
      priority: 96
      middlewares:
        - name: {{ .Release.Name }}-headers-middleware
          namespace: {{ .Release.Namespace }}
        - name: {{ .Release.Name }}-retry-middleware
          namespace: {{ .Release.Namespace }}
      services:
        - name: {{ .Release.Name }}-users
          namespace: {{ .Release.Namespace }}
          port: 9003
          scheme: "{{ if .Values.env.prod }}https{{ else }}http{{ end }}"
          {{- if .Values.env.prod }}
          serversTransport: {{ .Release.Name }}-https-transport
          {{- end }}

    {{- if .Values.argorollouts.enabled }}
    - kind: Rule
      match: >-
        {{- if .Values.env.prod }}
        Host(`prism.ultraviolet.rs`) && PathPrefix(`/rollouts`, `/api/v1/`)
        {{- else }}
        Host(`staging.prism.ultraviolet.rs`) && PathPrefix(`/rollouts`, `/api/v1/`)
        {{- end }}
      priority: 90
      middlewares:
        - name: {{ .Release.Name }}-dashboards-basic-auth-middleware
          namespace: {{ .Release.Namespace }}
      services:
        - name: prism-argorollouts-dashboard
          namespace: {{ .Release.Namespace }}
          port: 3100
    {{- end }}

    {{- if .Values.opensearch.enabled }}
    - kind: Rule
      match: >-
        {{- if .Values.env.prod }}
        Host(`prism.ultraviolet.rs`) && PathPrefix(`/opensearch`)
        {{- else }}
        Host(`staging.prism.ultraviolet.rs`) && PathPrefix(`/opensearch`)
        {{- end }}
      priority: 80
      services:
        - name: prism-opensearch-dashboards
          namespace: {{ .Release.Namespace }}
          port: 5601
          kind: Service
    {{- end }}

    {{- if .Values.prometheus.enabled }}
    - kind: Rule
      match: >-
        {{- if .Values.env.prod }}
        Host(`prism.ultraviolet.rs`) && PathPrefix(`/grafana`)
        {{- else }}
        Host(`staging.prism.ultraviolet.rs`) && PathPrefix(`/grafana`)
        {{- end }}
      priority: 70
      middlewares:
        - name: {{ .Release.Name }}-grafana-strip-prefix
          namespace: {{ .Release.Namespace }}
      services:
        - name: {{ .Release.Name }}-grafana
          namespace: {{ .Release.Namespace }}
          port: 80
          kind: Service

    - kind: Rule
      match: >-
        {{- if .Values.env.prod }}
        Host(`prism.ultraviolet.rs`) && PathPrefix(`/prometheus`)
        {{- else }}
        Host(`staging.prism.ultraviolet.rs`) && PathPrefix(`/prometheus`)
        {{- end }}
      priority: 60
      middlewares:
        - name: {{ .Release.Name }}-dashboards-basic-auth-middleware
          namespace: {{ .Release.Namespace }}
      services:
        - name: prism-monitoring-stack-prometheus
          namespace: {{ .Release.Namespace }}
          port: 9090
          kind: Service
    {{- end }}

    - kind: Rule
      match: >-
        {{- if .Values.env.prod }}
        Host(`prism.ultraviolet.rs`)
        {{- else }}
        Host(`staging.prism.ultraviolet.rs`)
        {{- end }}
      priority: 10
      middlewares:
        - name: {{ .Release.Name }}-middleware
          namespace: {{ .Release.Namespace }}
        - name: {{ .Release.Name }}-force-dashboard
          namespace: {{ .Release.Namespace }}
        - name: {{ .Release.Name }}-headers-middleware
          namespace: {{ .Release.Namespace }}
        - name: {{ .Release.Name }}-retry-middleware
          namespace: {{ .Release.Namespace }}
      services:
        - name: {{ .Release.Name }}-ui
          namespace: {{ .Release.Namespace }}
          port: 9095
  tls:
    certResolver: letsEncrypt

{{- if .Values.traefik.dashboard.enabled }}
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: {{ .Release.Name }}-traefik-dashboard
  namespace: {{ .Release.Namespace }}
spec:
  entryPoints:
    - traefik
  routes:
    - match: PathPrefix(`/dashboard`) || PathPrefix(`/api`)
      kind: Rule
      services:
        - name: api@internal
          kind: TraefikService
{{- end }}

---
# TCP IngressRoute for backend TCP service
apiVersion: traefik.io/v1alpha1
kind: IngressRouteTCP
metadata:
  name: {{ .Release.Name }}-tcp-backend
  namespace: {{ .Release.Namespace }}
spec:
  entryPoints:
    - tcp
  routes:
    - match: HostSNI(`*`)
      services:
        - name: {{ .Release.Name }}-backends
          namespace: {{ .Release.Namespace }}
          port: 7018
---

# Middlewares
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: {{ .Release.Name }}-headers-middleware
  namespace: {{ .Release.Namespace }}
spec:
  headers:
    frameDeny: true
    browserXssFilter: true

---
# Retry middleware
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: {{ .Release.Name }}-retry-middleware
  namespace: {{ .Release.Namespace }}
spec:
  retry:
    attempts: 5
    initialInterval: 100ms

---
# Force dashboard middleware
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: {{ .Release.Name }}-force-dashboard
  namespace: {{ .Release.Namespace }}
spec:
  replacePath:
    path: /ui

---
# Strip prefix middlewares
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: {{ .Release.Name }}-computations-strip-prefix
  namespace: {{ .Release.Namespace }}
spec:
  stripPrefix:
    prefixes:
      - /computations

---
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: {{ .Release.Name }}-users-strip-prefix
  namespace: {{ .Release.Namespace }}
spec:
  stripPrefix:
    prefixes:
      - /users

---
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: {{ .Release.Name }}-auth-strip-prefix
  namespace: {{ .Release.Namespace }}
spec:
  stripPrefix:
    prefixes:
      - /auth
---
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: {{ .Release.Name }}-billing-strip-prefix
  namespace: {{ .Release.Namespace }}
spec:
  stripPrefix:
    prefixes:
      - /billing

---
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: {{ .Release.Name }}-am-certs-strip-prefix
  namespace: {{ .Release.Namespace }}
spec:
  stripPrefix:
    prefixes:
      - /am-certs

---
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: {{ .Release.Name }}-workspaces-strip-prefix
  namespace: {{ .Release.Namespace }}
spec:
  stripPrefix:
    prefixes:
      - /workspaces

{{- if .Values.opensearch.enabled }}
---
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: {{ .Release.Name }}-opensearch-strip-prefix
  namespace: {{ .Release.Namespace }}
spec:
  stripPrefix:
    prefixes:
      - /opensearch
    forceSlash: true
{{- end }}

{{- if .Values.prometheus.enabled }}

---
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: {{ .Release.Name }}-grafana-strip-prefix
  namespace: {{ .Release.Namespace }}
spec:
  stripPrefix:
    prefixes:
      - /grafana
    forceSlash: true

{{- end }}


---
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: {{ .Release.Name }}-dashboards-basic-auth-middleware
  namespace: {{ .Release.Namespace }}
spec:
  basicAuth:
    removeHeader: true
    secret: dashboards-basic-auth-secret

{{- if .Values.env.prod }}
---
apiVersion: traefik.containo.us/v1alpha1
kind: ServersTransport
metadata:
  name: {{ .Release.Name }}-https-transport
  namespace: {{ .Release.Namespace }}
spec:
  insecureSkipVerify: true
{{- end }}
