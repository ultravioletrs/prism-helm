# Copyright (c) Ultraviolet
# SPDX-License-Identifier: Apache-2.0

apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: {{ .Release.Name }}-backends
spec:
  replicas: 1
  strategy:
    {{- if .Values.env.prod }}
    canary:
      steps:
        - setWeight: 20
        - pause: { }
        - setWeight: 40
        - pause: { duration: 2m }
        - setWeight: 60
        - pause: { duration: 2m }
        - setWeight: 80
        - pause: { duration: 2m }
    {{ else }}
    canary:
      maxSurge: 25%
      maxUnavailable: 25%
    {{- end }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}
      component: backends
  template:
    metadata:
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: "{{ .Values.backends.httpPort }}"
        prometheus.io/scrape: "true"
      labels:
        app: {{ .Release.Name }}
        component: backends
    spec:
      {{- with (default .Values.defaults.image.pullSecrets .Values.ui.image.pullSecrets) }}
      imagePullSecrets:
        {{- range . }}
        - name: {{ .name }}
        {{- end }}
      {{- end }}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      containers:
        - name: {{ .Release.Name }}-backends
          image: "{{ default (printf "%s/backends" .Values.defaults.image.rootRepository) .Values.backends.image.repository }}:{{ default .Values.defaults.image.tag .Values.backends.image.tag }}"
          imagePullPolicy: {{ default .Values.defaults.image.pullPolicy .Values.backends.image.pullPolicy }}
          envFrom:
            - configMapRef:
                name: {{ .Release.Name }}-backends-env-vars
            - secretRef:
                name: {{ .Release.Name }}-backends-secrets
          ports:
            - containerPort: {{ .Values.backends.httpPort }}
              protocol: TCP
            - containerPort: 7006
              protocol: TCP
            - containerPort: 7011
              protocol: TCP
          volumeMounts:
            - name: {{ .Release.Name }}-backends-secrets
              mountPath: /etc/secret
              readOnly: true

            - name: {{ .Release.Name }}-backends-providers-config
              mountPath: /providers/azure.toml
              subPath: azure.toml
              readOnly: true

            - name: {{ .Release.Name }}-backends-providers-config
              mountPath: /providers/gcp.toml
              subPath: gcp.toml
              readOnly: true

            - name: {{ .Release.Name }}-backends-providers-config
              mountPath: /providers/manager.toml
              subPath: manager.toml
              readOnly: true

            - name: {{ .Release.Name }}-backends-providers-config
              mountPath: /providers/gcp/main.tf
              subPath: gcp_main.tf
              readOnly: true

            - name: {{ .Release.Name }}-backends-providers-config
              mountPath: /providers/azure/main.tf
              subPath: azure_main.tf
              readOnly: true

            - name: {{ .Release.Name }}-backends-providers-config
              mountPath: /providers/cloud-init/config.yml
              subPath: cloud_init.yml

          resources:
            requests:
              cpu: "150m"
              memory: "256Mi"
            limits:
              cpu: "350m"
              memory: "512Mi"

      volumes:
        - name: {{ .Release.Name }}-backends-secrets
          secret:
            secretName: {{ .Release.Name }}-backends-secrets

        - name: {{ .Release.Name }}-backends-providers-config
          configMap:
            name: {{ .Release.Name }}-backends-providers-config-files
